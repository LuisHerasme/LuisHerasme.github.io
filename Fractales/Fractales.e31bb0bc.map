{"version":3,"sources":["Complex.js","Color.js","index.js"],"names":["Complex","real","imaginary","Re","Im","other","r","g","b","q","p","hue2rgb","t","hslToRgb","h","s","l","Math","round","canvasWidth","canvasHeight","c","n","z","col","counter","N_ITERATION","N_MAX","canvas","document","getElementById","context","getContext","width","height","addEventListener","Number","value","canvasData","getImageData","index","drawPixel","x","y","a","data","set_pixel","w","window","generateFractal","scale","temp_canvas","createElement","temp_context","temp_data","fractal","add","getSquare","abs","imagedata_to_image","imagedata","ctx","putImageData","image","Image","src","toDataURL","get_img","i","img","body","appendChild","setInterval","cos","sin"],"mappings":"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","file":"Fractales.e31bb0bc.map","sourceRoot":"..","sourcesContent":["class Complex {\r\n  constructor(real, imaginary) {\r\n    this.Re = real;\r\n    this.Im = imaginary;\r\n  }\r\n\r\n  add(other) {\r\n    this.Re += other.Re;\r\n    this.Im += other.Im;\r\n  }\r\n\r\n  copy() {\r\n    return new Complex(this.Re, this.Im);\r\n  }\r\n\r\n  square() {\r\n    this.Re = this.Re * this.Re - this.Im * this.Im;\r\n    this.Im = 2 * this.Im * this.Re;\r\n  }\r\n\r\n  getSquare() {\r\n    return new Complex(\r\n      this.Re * this.Re - this.Im * this.Im,\r\n      2 * this.Im * this.Re\r\n    );\r\n  }\r\n}\r\n\r\nexport default Complex;\r\n","var r, g, b, q, p;\r\nfunction hue2rgb(p, q, t) {\r\n  if (t < 0) {\r\n    t += 1;\r\n  }\r\n\r\n  if (t > 1) {\r\n    t -= 1;\r\n  }\r\n\r\n  if (t < 1 / 6) {\r\n    return p + (q - p) * 6 * t;\r\n  }\r\n\r\n  if (t < 1 / 2) {\r\n    return q;\r\n  }\r\n\r\n  if (t < 2 / 3) {\r\n    return p + (q - p) * (2 / 3 - t) * 6;\r\n  }\r\n\r\n  return p;\r\n}\r\n\r\nfunction hslToRgb(h, s, l) {\r\n  if (s == 0) {\r\n    r = g = b = l; // achromatic\r\n  } else {\r\n    q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    p = 2 * l - q;\r\n    r = hue2rgb(p, q, h + 1 / 3);\r\n    g = hue2rgb(p, q, h);\r\n    b = hue2rgb(p, q, h - 1 / 3);\r\n  }\r\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n}\r\nexport { hslToRgb };\r\n","/**\r\n *\r\n * TODO\r\n *\r\n * Add to options:\r\n *  Canvas resolution.\r\n *  Colors.\r\n *  N, Iterations\r\n *  N, Infinity\r\n *  Zoom\r\n */\r\n\r\nimport Complex from \"./Complex\";\r\nimport { hslToRgb } from \"./Color\";\r\n\r\nconst canvasWidth = 500;\r\nconst canvasHeight = 500;\r\nconst c = new Complex(-1, -0.3); //new Complex(-0.1, -0.3);\r\nlet n, z, col;\r\nlet counter = 0;\r\nlet N_ITERATION = 100;\r\nlet N_MAX = 2;\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\nconst context = canvas.getContext(\"2d\");\r\ncanvas.width = canvasWidth;\r\ncanvas.height = canvasHeight;\r\n\r\ndocument.getElementById(\"cambiar\").addEventListener(\"click\", () => {\r\n  c.Re = Number(document.getElementById(\"real\").value);\r\n  c.Im = Number(document.getElementById(\"im\").value);\r\n});\r\n\r\nvar canvasData = context.getImageData(0, 0, canvasWidth, canvasHeight);\r\n\r\nvar index;\r\nfunction drawPixel(x, y, r, g, b, a) {\r\n  index = (x + y * canvasWidth) * 4;\r\n  canvasData.data[index + 0] = r;\r\n  canvasData.data[index + 1] = g;\r\n  canvasData.data[index + 2] = b;\r\n  canvasData.data[index + 3] = a;\r\n}\r\n\r\nfunction set_pixel(data, w, x, y, r, g, b, a) {\r\n  index = (x + y * w) * 4;\r\n  data.data[index + 0] = r;\r\n  data.data[index + 1] = g;\r\n  data.data[index + 2] = b;\r\n  data.data[index + 3] = a;\r\n}\r\n\r\nwindow.generateFractal = generateFractal;\r\nwindow.context = context;\r\n\r\nfunction generateFractal(w, h, scale) {\r\n  const temp_canvas = document.createElement(\"canvas\");\r\n  const temp_context = temp_canvas.getContext(\"2d\");\r\n  temp_canvas.width = w;\r\n  temp_canvas.height = h;\r\n  let temp_data = temp_context.getImageData(0, 0, w, h);\r\n  temp_data = fractal(w, h, scale, temp_data);\r\n  /*\r\n  for (let x = 0; x < w; x++) {\r\n    for (let y = 0; y < h; y++) {\r\n      z = new Complex(scale * (x / w) - scale / 2, scale * (y / h) - scale / 2); // Zoom.\r\n      n = 0;\r\n\r\n      while (n < N_ITERATION) {\r\n        z.add(z.getSquare());\r\n        z.add(c);\r\n\r\n        if (Math.hypot(z.Re, z.Im) > N_MAX) {\r\n          break;\r\n        }\r\n\r\n        n++;\r\n      }\r\n\r\n      n = n / N_ITERATION + 0.0; // Color.\r\n      col = hslToRgb(n, 1, 0.5);\r\n      set_pixel(temp_data, w, x, y, col[0], col[1], col[2], n * 255);\r\n    }\r\n  }\r\n  */\r\n  return temp_data;\r\n}\r\n\r\nfunction fractal(width, height, scale, data) {\r\n  for (let x = 0; x < width; x++) {\r\n    for (let y = 0; y < height; y++) {\r\n      z = new Complex(\r\n        scale * (x / width) - scale / 2,\r\n        scale * (y / height) - scale / 2\r\n      );\r\n      n = 0;\r\n      while (n < N_ITERATION) {\r\n        z.add(z.getSquare());\r\n        z.add(c);\r\n        if (Math.abs(z.Re + z.Im) > N_MAX) break;\r\n        n++;\r\n      }\r\n      n = n / N_ITERATION + 0.0; // Color.\r\n      col = hslToRgb(n, 1, 0.5);\r\n      set_pixel(data, width, x, y, col[0], col[1], col[2], n * 255);\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\nwindow.imagedata_to_image = imagedata_to_image;\r\nfunction imagedata_to_image(imagedata) {\r\n  var canvas = document.createElement(\"canvas\");\r\n  var ctx = canvas.getContext(\"2d\");\r\n  canvas.width = imagedata.width;\r\n  canvas.height = imagedata.height;\r\n  ctx.putImageData(imagedata, 0, 0);\r\n\r\n  var image = new Image();\r\n  image.src = canvas.toDataURL();\r\n  return image;\r\n}\r\n\r\nfunction get_img(w, h, scale) {\r\n  let i = generateFractal(w, h, scale);\r\n  let img = imagedata_to_image(i);\r\n  document.body.appendChild(img);\r\n}\r\nwindow.get_img = get_img;\r\n\r\nsetInterval(() => {\r\n  c.Im += Math.cos(counter) / 100;\r\n  c.Re += Math.sin(counter) / 100;\r\n  counter += 0.05;\r\n  context.putImageData(canvasData, 0, 0);\r\n  canvasData = fractal(canvasWidth, canvasHeight, 2, canvasData);\r\n  /*\r\n  for (let x = 0; x < canvasWidth; x++) {\r\n    for (let y = 0; y < canvasHeight; y++) {\r\n      z = new Complex(\r\n        3 * (x / canvasWidth) - 1.5,\r\n        3 * (y / canvasHeight) - 1.5\r\n      );\r\n      n = 0;\r\n      while (n < N_ITERATION) {\r\n        z.add(z.getSquare());\r\n        z.add(c);\r\n        if (Math.abs(z.Re + z.Im) > N_MAX) {\r\n          break;\r\n        }\r\n        n++;\r\n      }\r\n      n = n / N_ITERATION + 0.0;\r\n      col = hslToRgb(n, 1, 0.5);\r\n      drawPixel(x, y, col[0], col[1], col[2], n * 255);\r\n    }\r\n  }  */\r\n}, 1000 / 10);\r\n"]}